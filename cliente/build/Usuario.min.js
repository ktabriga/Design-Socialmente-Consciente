!function(){"use strict";function usuarioController(UsuarioModel,Notificacao,$state,$stateParams,$mdDialog){function init(){var id=$stateParams.idUsuario;id?UsuarioModel.find(id):UsuarioModel.findAll()}function editar(usuario){delete usuario.pass,vm.usuario=angular.copy(usuario)}function remover(usuario,evento){var confirm=$mdDialog.confirm().title("Tem certeza que deseja excluir o usuario "+usuario.nome+"?").content("Esta operaca nao pode ser revertida!").ariaLabel("Confirmar exclusao").ok("Confirmar").cancel("Cancelar").targetEvent(evento);$mdDialog.show(confirm).then(function(){UsuarioModel.remove(usuario._id)},function(){})}function salvar(usuario){vm.master=angular.copy(usuario),vm.master.hasOwnProperty("_id")?UsuarioModel.update(vm.master):UsuarioModel.create(vm.master)}var vm=this;vm.master={},vm.usuario={},vm.message="",vm.editar=editar,vm.remover=remover,vm.salvar=salvar,init(),Notificacao.addEventListener("usuario:find_all_success",function(event,data){_findAll.success(data)}),Notificacao.addEventListener("usuario:find_all_error",function(event,data){_findAll.error(data)}),Notificacao.addEventListener("usuario:find_success",function(event,data){_find.success(data)}),Notificacao.addEventListener("usuario:find_error",function(event,data){_find.error(data)}),Notificacao.addEventListener("usuario:create_success",function(event,data){_create.success(data)}),Notificacao.addEventListener("usuario:create_error",function(event,data){_create.error(data)}),Notificacao.addEventListener("usuario:update_success",function(event,data){_update.success(data)}),Notificacao.addEventListener("usuario:update_error",function(event,data){_update.error(data)}),Notificacao.addEventListener("usuario:remove_success",function(event,data){_remove.success(data)}),Notificacao.addEventListener("usuario:remove_error",function(event,data){_remove.error(data)}),Notificacao.removeEventListener("usuario:find_all_success",function(event,data){_findAll.success(data)}),Notificacao.removeEventListener("usuario:find_all_error",function(event,data){_findAll.error(data)}),Notificacao.removeEventListener("usuario:find_success",function(event,data){_find.success(data)}),Notificacao.removeEventListener("usuario:find_error",function(event,data){_find.error(data)}),Notificacao.removeEventListener("usuario:create_success",function(event,data){_create.success(data)}),Notificacao.removeEventListener("usuario:create_error",function(event,data){_create.error(data)}),Notificacao.removeEventListener("usuario:update_success",function(event,data){_update.success(data)}),Notificacao.removeEventListener("usuario:update_error",function(event,data){_update.error(data)}),Notificacao.removeEventListener("usuario:remove_success",function(event,data){_remove.success(data)}),Notificacao.removeEventListener("usuario:remove_error",function(event,data){_remove.error(data)});var _findAll={success:function(data){vm.usuarios=data},error:function(data){console.warn(data)}},_find={success:function(data){vm.usuario=data},error:function(data){console.warn(data)}},_create={success:function(data){vm.message="Usuário criado com sucesso",vm.usuarios.push(data),$state.go("app.usuario")},error:function(){}},_update={success:function(){vm.message="Usuário alterado com sucesso",UsuarioModel.findAll(),vm.usuario={},$state.go("app.usuario")},error:function(data){vm.message=data.message,console.warn(data)}},_remove={success:function(){vm.message="Usuário deletado com sucesso",UsuarioModel.findAll()},error:function(data){vm.message=data.message,console.warn(data)}}}angular.module("app.usuario").controller("UsuarioController",usuarioController),usuarioController.$inject=["UsuarioModel","Notificacao","$state","$stateParams","$mdDialog"]}(),function(){"use strict";function usuarioModel(UsuarioService,Notificacao){function findAll(){var _handleFindAll={success:function(result){Notificacao.notify("usuario:find_all_success",result.data)},error:function(error){Notificacao.notify("usuario:find_all_error",error.data),console.error("UserModel : User find all error")}};UsuarioService.findAll().then(_handleFindAll.success,_handleFindAll.error)}function find(id){var _handleFind={success:function(result){Notificacao.notify("usuario:find_success",result.data)},error:function(error){Notificacao.notify("usuario:find_error",error.data),console.error("UserModel : User find error")}};UsuarioService.find(id).then(_handleFind.success,_handleFind.error)}function create(data){var _handleCreate={success:function(result){Notificacao.notify("usuario:create_success",result.data)},error:function(error){Notificacao.notify("usuario:create_error",error.data),console.error("UserModel : User create error")}};UsuarioService.create(data).then(_handleCreate.success,_handleCreate.error)}function update(data){var _handleUpdate={success:function(result){Notificacao.notify("usuario:update_success",result.data)},error:function(error){Notificacao.notify("usuario:update_error",error.data),console.error("UserModel : User update error")}};UsuarioService.update(data).then(_handleUpdate.success,_handleUpdate.error)}function remove(id){var _handleRemove={success:function(result){Notificacao.notify("usuario:remove_success",result.data)},error:function(error){Notificacao.notify("usuario:remove_error",error.data),console.error("UserModel : User remove error")}};UsuarioService.remove(id).then(_handleRemove.success,_handleRemove.error)}var service={create:create,find:find,findAll:findAll,update:update,remove:remove};return service}angular.module("app.usuario").factory("UsuarioModel",usuarioModel),usuarioModel.$inject=["UsuarioService","Notificacao"]}(),function(){"use strict";function usuarioService($http){function findAll(){return $http.get(API_ROUTE).error(errorCallback)}function findByRole(){return $http.post(API_ROUTE.concat("/role")).error(errorCallback)}function find(id){return $http.get(API_ROUTE.concat("/").concat(id)).error(errorCallback)}function create(data){return $http.post(API_ROUTE,data).error(errorCallback)}function update(data){return $http.put(API_ROUTE.concat("/").concat(data._id),data).error(errorCallback)}function remove(id){return $http["delete"](API_ROUTE.concat("/").concat(id)).error(errorCallback)}function unique(data){return $http.post(API_ROUTE.concat("/unique"),data).error(errorCallback)}function errorCallback(){}var API_ROUTE="/api/usuarios",service={API_ROUTE:API_ROUTE,create:create,errorCallback:errorCallback,find:find,findAll:findAll,findByRole:findByRole,unique:unique,update:update,remove:remove};return service}angular.module("app.usuario").factory("UsuarioService",usuarioService),usuarioService.$inject=["$http"]}();
//# sourceMappingURL=data:application/json;base64,